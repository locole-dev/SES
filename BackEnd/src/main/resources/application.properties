# (User-defined Property)
# Port for HTTP and read by Spring Boot via @Value("${server.http.port:80}")
server.http.port=8089

# Port for HTTPS and read by Spring Boot via @Value("${server.port:443}")
server.port=8443

server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/keystore.p12
server.ssl.key-store-password=tomcat
server.ssl.key-alias=tomcat

#emp api
emp.ws.address=http://localhost:8089/api/emp
#emp.ws.address=http://10.11.10.111:8089/api/emp
emp.ws.user=emp
emp.ws.pass=123456

#------------------------------------------------SES--------------------------------------------
#ses api 10.11.111
#ses.ws.address=http://10.11.10.111:8089/api/ses
#ses.ws.address.authen=http://10.11.10.111:8089/api/ses
#ses.ws.address.activate=http://10.11.10.111:8089/api/ses
#ses.ws.address.manage=http://10.11.10.111:8089/api/ses
#ses.ws.address.recovery=http://10.11.10.111:8089/api/ses

#ses api localhost
#ses.ws.address=http://localhost:8089/api/ses
#ses.ws.address.authen=http://localhost:8089/api/ses
#ses.ws.address.activate=http://localhost:8089/api/ses
#ses.ws.address.manage=http://localhost:8089/api/ses
#ses.ws.address.recovery=http://localhost:8089/api/ses

#
#ses api server: 169.254.100.8
#
#ses.ws.address=http://169.254.100.8:18088
#ses.ws.address.authen=http://169.254.100.8:18088
#ses.ws.address.activate=http://169.254.100.8:9351
#ses.ws.address.manage=http://169.254.100.8:9371
#ses.ws.address.recovery=http://169.254.100.8:9351
#
#
#ses api server: 169.254.100.18
#
ses.ws.address=http://169.254.100.18:18080
ses.ws.address.authen=http://10.156.3.169:80
ses.ws.address.activate=http://169.254.100.18:9351
ses.ws.address.manage=http://169.254.100.18:9371
ses.ws.address.recovery=http://169.254.100.18:9351
#
ses.ws.user=ses
ses.ws.pass=123456
#
ses.ws.cipher.algorithm=Blowfish
#ses.ws.cipher.algorithm=AES
ses.ws.cipher.algorithm_transform=Blowfish/CBC/PKCS5Padding
#ses.ws.cipher.algorithm_transform=AES/CBC/PKCS5PADDING
ses.ws.cipher.iv=0102030405060708
ses.ws.cipher.key=wapwap12wapwap12
#config url
ses.url.validateUserByPin=/ses/validate-user-by-pin
ses.url.activateEsimSubscription = /esimservice/v1.0/activateEsimSubscription
ses.url.eimSubscription = /ses/customercare/v2/esimSubscription

ses.url.entitlements = /entitlements
ses.url.syncEsimSubInfo = /esim/syncEsimSubInfo
ses.url.IMSI2MSISDN = /useridentities/msisdn?imsi={imsi}
ses.url.eligibilityCheck = /esim/eligibilityCheck
ses.url.carrierPlan = /carrierPlan
ses.url.carrierPlan_IMSI_MSISDN = /carrierPlan?msisdn={msisdn}&imsi={imsi}&operator-id={operator-id}&country={country}&language={language}&client-type={client-type}&is-5gplan-only={is-5gplan-only}&limit={limit}
ses.url.carrierPlan_PLAN_ID = /carrierPlan?plan-id={plan-id}&operator-id={operator-id}&country={country}&language={language}
ses.url.carrierPlan_eSIM = /carrierPlan?msisdn={msisdn}&imsi={imsi}&operator-id={operator-id}&imei={imei}&eid={eid}&device-type={device-type}&secondary-imsi={secondary-imsi}&secondary-msisdn={secondary-msisdn}&country={country}&language={language}&client-type={client-type}&plan-subscribed-status={plan-subscribed-status}&limit={limit}
ses.url.carrierPlan_5G = /carrierPlan?msisdn={msisdn}&imsi={imsi}&is-5gplan-only={is-5gplan-only}
ses.url.triggerSubscriptionActivation = /esim/triggerSubscriptionActivation
ses.url.triggerSubscriptionRecovery = /esim/triggerSubscriptionRecovery
ses.url.triggerSubscriptionDeactivation = /esim/triggerSubscriptionDeactivation


#------------------------------------------------End SES--------------------------------------------

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost/springSession?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.initialization-mode=always
#
#spring.h2.console.enabled=true
#
#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always
#spring.session.timeout.seconds=900

#------------------------------------------------WDF--------------------------------------------
file.upload-dir=${catalina.base}/temp/upload
file.upload-data=${catalina.base}/temp/data
wdf.request-path-prefix: /api/wdf

application.security.jwt.secret-key=308b7dad27a4e903a144dc2561d5f5650eee05375262290c61f828062458ae29
# 1 day
application.security.jwt.expiration=86400000
# 7 day
application.security.jwt.refresh-token.expiration=604800000

# C?u hình k?t n?i ??n PostgreSQL
#spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/ses_wdf
#spring.datasource.username=wdf
#spring.datasource.password=wdf@123
#spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Dialect cho PostgreSQL
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate t? ??ng t?o b?ng n?u ch?a có
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#------------------------------------------------End WDF--------------------------------------------
